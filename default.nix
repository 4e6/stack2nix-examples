# Generated by stackage2nix 0.2.0 from stackage2nix/stack.yaml
{ nixpkgs ? import <nixpkgs> {} }:

with nixpkgs;
let
  inherit (stdenv.lib) extends;
  stackagePackages = self: import ./packages.nix { inherit pkgs stdenv; inherit (self) callPackage; };
  stackageConfig = callPackage ./configuration-packages.nix {};
  stackPackages =
    { pkgs, stdenv, callPackage }:
    
    self: {
      "Cabal" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , deepseq, directory, filepath, pretty, process, QuickCheck, tagged
         , tar, tasty, tasty-hunit, tasty-quickcheck, time, unix
         }:
         mkDerivation {
           pname = "Cabal";
           version = "2.0.0.2";
           sha256 = "0chhl2113jbahd5gychx9rdqj1aw22h7dyj6z44871hzqxngx6bc";
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             pretty process time unix
           ];
           testHaskellDepends = [
             array base bytestring containers directory filepath pretty
             QuickCheck tagged tar tasty tasty-hunit tasty-quickcheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/cabal/";
           description = "A framework for packaging Haskell software";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stackage2nix" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, cabal2nix
         , containers, deepseq, distribution-nixpkgs, exceptions, filepath
         , gitlib, gitlib-libgit2, hopenssl, hspec, inflections
         , language-nix, lens, network-uri, optparse-applicative, pretty
         , QuickCheck, shakespeare, stackage-curator, text
         , unordered-containers, yaml
         }:
         mkDerivation {
           pname = "stackage2nix";
           version = "0.2.0";
           src = stackage2nix/.;
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal cabal2nix containers deepseq
             distribution-nixpkgs exceptions filepath gitlib gitlib-libgit2
             hopenssl inflections language-nix lens network-uri
             optparse-applicative pretty QuickCheck stackage-curator text
             unordered-containers yaml
           ];
           executableHaskellDepends = [ base ];
           testHaskellDepends = [
             base bytestring Cabal hspec pretty shakespeare text yaml
           ];
           homepage = "https://github.com/4e6/stackage2nix#readme";
           description = "Convert Stack files into Nix build instructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal2nix" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, bytestring, Cabal
         , cabal-doctest, containers, deepseq, directory
         , distribution-nixpkgs, doctest, fetchgit, filepath, hackage-db
         , hopenssl, language-nix, lens, monad-par, monad-par-extras, mtl
         , optparse-applicative, pretty, process, split, text, time
         , transformers, utf8-string, yaml
         }:
         mkDerivation {
           pname = "cabal2nix";
           version = "2.4.1";
           src = fetchgit {
             url = "https://github.com/NixOS/cabal2nix.git";
             sha256 = "0nkx6f76sx8gyxy5a1g5h14ld292s1x9a5km7lyhv4awhbz426gz";
             rev = "53777ef45c45f397c1f56f9230ae494d2aefee86";
           };
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base bytestring Cabal containers deepseq
             directory distribution-nixpkgs filepath hackage-db hopenssl
             language-nix lens optparse-applicative pretty process split text
             transformers yaml
           ];
           executableHaskellDepends = [
             aeson ansi-wl-pprint base bytestring Cabal containers deepseq
             directory distribution-nixpkgs filepath hackage-db hopenssl
             language-nix lens monad-par monad-par-extras mtl
             optparse-applicative pretty process split text time transformers
             utf8-string yaml
           ];
           testHaskellDepends = [
             aeson ansi-wl-pprint base bytestring Cabal containers deepseq
             directory distribution-nixpkgs doctest filepath hackage-db hopenssl
             language-nix lens optparse-applicative pretty process split text
             transformers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nixos/cabal2nix#readme";
           description = "Convert Cabal files into Nix build instructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stackage-curator" = callPackage
        ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-s3, async
         , base, base16-bytestring, blaze-html, byteable, bytestring, Cabal
         , classy-prelude-conduit, conduit, conduit-extra, containers
         , cryptohash, cryptohash-conduit, data-default-class, directory
         , exceptions, fetchgit, filepath, hashable, hspec, html-conduit
         , http-client, http-client-tls, http-conduit, lucid, mime-types
         , monad-unlift, monad-unlift-ref, mono-traversable, mtl, old-locale
         , optparse-applicative, optparse-simple, process, QuickCheck
         , resourcet, safe, semigroups, stm, store, streaming-commons, syb
         , system-fileio, system-filepath, tar, temporary, text, time
         , transformers, unix-compat, unordered-containers, utf8-string
         , vector, xml-conduit, xml-types, yaml, zlib
         }:
         mkDerivation {
           pname = "stackage-curator";
           version = "0.14.5";
           src = fetchgit {
             url = "https://github.com/fpco/stackage-curator.git";
             sha256 = "0k81mmljhr2cr3y2sfhl9mv2s6mlmb1nl267iac350km7h0jvis5";
             rev = "3a3feeb6cc9e40bfbd7383c5e8975cd16420d822";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson amazonka amazonka-core amazonka-s3 async base
             base16-bytestring blaze-html byteable bytestring Cabal
             classy-prelude-conduit conduit conduit-extra containers cryptohash
             cryptohash-conduit data-default-class directory exceptions filepath
             hashable html-conduit http-client http-client-tls http-conduit
             lucid mime-types monad-unlift monad-unlift-ref mono-traversable mtl
             old-locale process resourcet safe semigroups stm store
             streaming-commons syb system-fileio system-filepath tar temporary
             text time transformers unix-compat unordered-containers utf8-string
             vector xml-conduit xml-types yaml zlib
           ];
           executableHaskellDepends = [
             aeson base http-client http-client-tls optparse-applicative
             optparse-simple system-filepath text
           ];
           testHaskellDepends = [
             base Cabal classy-prelude-conduit containers directory hspec
             http-client http-client-tls QuickCheck text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-curator";
           description = "Tools for curating Stackage bundles";
           license = stdenv.lib.licenses.mit;
         }) {};
    };
  
  pkgOverrides = self: stackPackages {
    inherit pkgs stdenv;
    inherit (self) callPackage;
  };
  
in callPackage (nixpkgs.path + "/pkgs/development/haskell-modules") {
  ghc = pkgs.haskell.compiler.ghc802;
  compilerConfig = self: extends pkgOverrides (extends stackageConfig (stackagePackages self));
  haskellLib = callPackage (nixpkgs.path + "/pkgs/development/haskell-modules/lib.nix") {};
}
